{"version":3,"file":"angular5-data-table.js","sources":["../../src/components/column.component.ts","../../src/components/row.template.ts","../../src/components/row.style.ts","../../src/components/row.component.ts","../../src/types/default-translations.type.ts","../../src/utils/drag.ts","../../src/components/table.template.ts","../../src/components/table.style.ts","../../src/components/table.component.ts","../../src/components/pagination.template.ts","../../src/components/pagination.style.ts","../../src/components/pagination.component.ts","../../src/components/header.template.ts","../../src/components/header.style.ts","../../src/components/header.component.ts","../../src/tools/data-table-resource.ts","../../src/utils/hide.ts","../../src/utils/min.ts","../../src/utils/px.ts","../../src/modules/data-table.module.ts","../../src/angular5-data-table.ts"],"sourcesContent":["import { Directive, Input, ContentChild, OnInit, ElementRef } from '@angular/core';\r\nimport { DataTableRow } from './row.component';\r\nimport { CellCallback } from '../types/cell-callback.type';\r\n\r\n\r\n@Directive({\r\n  selector: 'data-table-column'\r\n})\r\nexport class DataTableColumn implements OnInit {\r\n\r\n    // init:\r\n    @Input() header: string;\r\n    @Input() sortable = false;\r\n    @Input() resizable = false;\r\n    @Input() property: string;\r\n    @Input() styleClass: string;\r\n    @Input() cellColors: CellCallback;\r\n\r\n    // init and state:\r\n    @Input() width: number | string;\r\n    @Input() visible = true;\r\n\r\n    @ContentChild('dataTableCell') cellTemplate: ElementRef;\r\n    @ContentChild('dataTableHeader') headerTemplate: ElementRef;\r\n\r\n    getCellColor(row: DataTableRow, index: number) {\r\n        if (this.cellColors !== undefined) {\r\n            return (<CellCallback>this.cellColors)(row.item, row, this, index);\r\n        }\r\n    }\r\n\r\n    private styleClassObject = {}; // for [ngClass]\r\n\r\n    ngOnInit() {\r\n        this._initCellClass();\r\n    }\r\n\r\n    private _initCellClass() {\r\n        if (!this.styleClass && this.property) {\r\n            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\r\n                this.styleClass = 'column-' + this.property;\r\n            } else {\r\n                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\r\n            }\r\n        }\r\n\r\n        if (this.styleClass != null) {\r\n            this.styleClassObject = {\r\n                [this.styleClass]: true\r\n            };\r\n        }\r\n    }\r\n}\r\n","export const ROW_TEMPLATE = `\r\n<tr\tclass=\"data-table-row\"\r\n    [title]=\"getTooltip()\"\r\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\r\n    [class.row-odd]=\"index % 2 === 0\"\r\n    [class.row-even]=\"index % 2 === 1\"\r\n    [class.selected]=\"selected\"\r\n    [class.clickable]=\"dataTable.selectOnRowClick\"\r\n    (dblclick)=\"dataTable.rowDoubleClicked(_this, $event)\"\r\n    (click)=\"dataTable.rowClicked(_this, $event)\"\r\n    >\r\n    <td [hide]=\"!dataTable.expandColumnVisible\">\r\n        <div tabindex=\"0\" role=\"button\" (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\r\n            [attr.aria-expanded]=\"expanded\" [title]=\"dataTable.translations.expandRow\" [attr.aria-label]=\"dataTable.translations.expandRow\">\r\n            <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\r\n        </div>\r\n    </td>\r\n    <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\r\n    <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\r\n        <input type=\"checkbox\" [(ngModel)]=\"selected\"/>\r\n    </td>\r\n    <td *ngFor=\"let column of dataTable.columns\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\" class=\"data-column\"\r\n        [style.background-color]=\"column.getCellColor(_this, index)\">\r\n        <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\r\n        <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\" [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\r\n    </td>\r\n</tr>\r\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\r\n    <td [attr.colspan]=\"dataTable.columnCount\">\r\n        <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\r\n    </td>\r\n</tr>\r\n`;\r\n","export const ROW_STYLE = `\r\n.select-column {\r\n    text-align: center;\r\n}\r\n\r\n.row-expand-button {\r\n    cursor: pointer;\r\n    text-align: center;\r\n}\r\n\r\n.clickable {\r\n    cursor: pointer;\r\n}\r\n`;","import {\r\n    Component, Input, Inject, forwardRef, Output, EventEmitter, OnDestroy\r\n} from '@angular/core';\r\nimport { DataTable } from './table.component';\r\nimport { ROW_TEMPLATE } from './row.template';\r\nimport { ROW_STYLE } from \"./row.style\";\r\n\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: '[dataTableRow]',\r\n    template: ROW_TEMPLATE,\r\n    styles: [ROW_STYLE]\r\n})\r\nexport class DataTableRow implements OnDestroy {\r\n\r\n    public _this = this;\r\n\r\n\t@Input() item: any;\r\n    @Input() index: number;\r\n\r\n    expanded: boolean;\r\n\r\n    // row selection:\r\n\r\n    private _selected: boolean;\r\n\r\n    @Output() selectedChange = new EventEmitter();\r\n\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(selected) {\r\n        this._selected = selected;\r\n        this.selectedChange.emit(selected);\r\n    }\r\n\r\n    // other:\r\n\r\n    get displayIndex() {\r\n        if (this.dataTable.pagination) {\r\n            return this.dataTable.displayParams.offset! + this.index + 1;\r\n        } else {\r\n            return this.index + 1;\r\n        }\r\n    }\r\n\r\n    getTooltip() {\r\n        if (this.dataTable.rowTooltip) {\r\n            return this.dataTable.rowTooltip(this.item, this, this.index);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable) {}\r\n\r\n    ngOnDestroy() {\r\n        this.selected = false;\r\n    }\r\n\r\n}\r\n","import {DataTableTranslations} from'./data-table-translations.type'\r\n\r\nexport const defaultTranslations: DataTableTranslations = {\r\n\theaderReload: 'reload',\r\n\theaderColumnSelector: 'column selector',\r\n\tindexColumn: 'index',\r\n\tselectColumn: 'select',\r\n\tselectRow: 'select',\r\n\tselectAllRows: 'select',\r\n\texpandColumn: 'expand',\r\n\texpandRow: 'expand',\r\n\tpaginationLimit: 'Limit',\r\n\tpaginationRange: 'Results'\r\n};\r\n","\r\nexport type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\r\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\r\n\r\nexport function drag(event: MouseEvent, { move: move, up: up}: {move: MoveHandler, up?: UpHandler}) {\r\n\r\n    let startX = event.pageX;\r\n    let startY = event.pageY;\r\n    let x = startX;\r\n    let y = startY;\r\n    let moved = false;\r\n\r\n    function mouseMoveHandler(event: MouseEvent) {\r\n        let dx = event.pageX - x;\r\n        let dy = event.pageY  - y;\r\n        x = event.pageX;\r\n        y = event.pageY;\r\n        if (dx || dy) moved = true;\r\n\r\n        move(event, dx, dy, x, y);\r\n\r\n        event.preventDefault(); // to avoid text selection\r\n    }\r\n\r\n    function mouseUpHandler(event: MouseEvent) {\r\n        x = event.pageX;\r\n        y = event.pageY;\r\n\r\n        document.removeEventListener('mousemove', mouseMoveHandler);\r\n        document.removeEventListener('mouseup', mouseUpHandler);\r\n\r\n        if (up) up(event, x, y, moved);\r\n    }\r\n\r\n    document.addEventListener('mousemove', mouseMoveHandler);\r\n    document.addEventListener('mouseup', mouseUpHandler);\r\n}\r\n","export const TABLE_TEMPLATE = `\r\n<div class=\"data-table-wrapper\">\r\n    <data-table-header *ngIf=\"header\"></data-table-header>\r\n\t\r\n    <div class=\"data-table-box\">\r\n    \t<table class=\"table data-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\" [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\r\n                    <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\r\n                        <span [textContent]=\"indexColumnHeader\"></span>\r\n                    </th>\r\n                    <th scope=\"col\" [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\r\n                        <input [hide]=\"!multiSelect\" type=\"checkbox\" [(ngModel)]=\"selectAllCheckbox\" [attr.aria-label]=\"translations.selectAllRows\" />\r\n                    </th>\r\n                    <th scope=\"col\" *ngFor=\"let column of columns\" #th [hide]=\"!column.visible\" \r\n                    \t  (click)=\"headerClicked(column, $event)\" \r\n                    \t  (keydown.enter)=\"headerClicked(column, $event)\" (keydown.space)=\"headerClicked(column, $event)\"\r\n                        [class.sortable]=\"column.sortable\" [class.resizable]=\"column.resizable\"\r\n                        [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\"\r\n                        [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\r\n                        [attr.tabindex]=\"column.sortable ? '0' : null\">\r\n                        <span *ngIf=\"!column.headerTemplate\" [textContent]=\"column.header\"></span>\r\n                        <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\" [ngTemplateOutletContext]=\"{column: column}\"></span>\r\n                        <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\r\n                             <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\" aria-hidden=\"true\"></i>\r\n                             <i [hide]=\"column.property !== sortBy\" class=\"fa\" [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"column.resizable\" class=\"column-resize-handle\" (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\r\n                   dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\r\n            </tbody>\r\n            <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\r\n                <tr *ngFor=\"let item of substituteItems, let index = index\"\r\n                    [class.row-odd]=\"(index + items.length) % 2 === 0\"\r\n                    [class.row-even]=\"(index + items.length) % 2 === 1\"\r\n                    >\r\n                    <td [hide]=\"!expandColumnVisible\"></td>\r\n                    <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\r\n                    <td [hide]=\"!selectColumnVisible\"></td>\r\n                    <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <div class=\"busy\" *ngIf=\"showReloading && reloading\">\r\n          <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\r\n        </div>\r\n    </div>\r\n\r\n    <data-table-pagination *ngIf=\"pagination\"></data-table-pagination>\r\n</div>\r\n`;\r\n","export const TABLE_STYLE = `\r\n/* bootstrap override: */\r\n\r\n:host /deep/ .data-table.table > tbody+tbody {\r\n    border-top: none;\r\n}\r\n:host /deep/ .data-table.table td {\r\n    vertical-align: middle;\r\n}\r\n\r\n:host /deep/ .data-table > thead > tr > th,\r\n:host /deep/ .data-table > tbody > tr > td {\r\n\toverflow: hidden;\r\n}\r\n\r\n/* I can't use the bootstrap striped table, because of the expandable rows */\r\n:host /deep/ .row-odd {\r\n    background-color: #F6F6F6;\r\n}\r\n:host /deep/ .row-even {\r\n}\r\n\r\n.data-table .substitute-rows > tr:hover,\r\n:host /deep/ .data-table .data-table-row:hover {\r\n    background-color: #ECECEC;\r\n}\r\n/* table itself: */\r\n\r\n.data-table {\r\n    box-shadow: 0 0 15px rgb(236, 236, 236);\r\n    table-layout: fixed;\r\n}\r\n\r\n/* header cells: */\r\n\r\n.column-header {\r\n    position: relative;\r\n}\r\n.expand-column-header {\r\n\twidth: 50px;\r\n}\r\n.select-column-header {\r\n\twidth: 50px;\r\n\ttext-align: center;\r\n}\r\n.index-column-header {\r\n\twidth: 40px;\r\n}\r\n.column-header.sortable {\r\n    cursor: pointer;\r\n}\r\n.column-header .column-sort-icon {\r\n\tfloat: right;\r\n}\r\n.column-header.resizable .column-sort-icon {\r\n    margin-right: 8px;\r\n}\r\n.column-header .column-sort-icon .column-sortable-icon {\r\n    color: lightgray;\r\n}\r\n.column-header .column-resize-handle {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 8px;\r\n    height: 100%;\r\n    cursor: col-resize;\r\n}\r\n\r\n/* cover: */\r\n.data-table-box {\r\n\tposition: relative;\r\n}\r\n\r\n.busy {\r\n\tposition: absolute;\r\n\tz-index: 1;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbackground-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.busy > i {\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n}\r\n`;","import {\r\n\tComponent, Input, Output, EventEmitter, ContentChildren, QueryList,\r\n\tTemplateRef, ContentChild, ViewChildren, OnInit\r\n} from '@angular/core';\r\nimport { DataTableColumn } from './column.component';\r\nimport { DataTableRow } from './row.component';\r\nimport { DataTableParams } from '../types/data-table-params.type';\r\nimport { RowCallback } from '../types/row-callback.type';\r\nimport { DataTableTranslations } from '../types/data-table-translations.type';\r\nimport { defaultTranslations } from '../types/default-translations.type';\r\nimport { drag } from '../utils/drag';\r\nimport { TABLE_TEMPLATE } from './table.template';\r\nimport { TABLE_STYLE } from \"./table.style\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/do';\r\n\r\n@Component({\r\n\tmoduleId: module.id,\r\n\tselector: 'data-table',\r\n\ttemplate: TABLE_TEMPLATE,\r\n\tstyles: [TABLE_STYLE]\r\n})\r\nexport class DataTable implements DataTableParams, OnInit {\r\n\r\n\tprivate _items: any[] = [];\r\n\r\n\t@Input() get items() {\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\tset items(items: any[]) {\r\n\t\tthis._items = items;\r\n\t\tthis._onReloadFinished();\r\n\t}\r\n\r\n\t@Input() itemCount: number;\r\n\r\n\t// UI components:\r\n\t@ContentChildren(DataTableColumn) columns: QueryList<DataTableColumn>;\r\n\t@ViewChildren(DataTableRow) rows: QueryList<DataTableRow>;\r\n\t@ContentChild('dataTableExpand') expandTemplate: TemplateRef<any>;\r\n\r\n\t// One-time optional bindings with default values:\r\n\t@Input() headerTitle: string;\r\n\t@Input() header = true;\r\n\t@Input() pagination = true;\r\n\t@Input() indexColumn = true;\r\n\t@Input() indexColumnHeader = '';\r\n\t@Input() rowColors: RowCallback;\r\n\t@Input() rowTooltip: RowCallback;\r\n\t@Input() selectColumn = false;\r\n\t@Input() multiSelect = true;\r\n\t@Input() substituteRows = true;\r\n\t@Input() expandableRows = false;\r\n\t@Input() translations: DataTableTranslations = defaultTranslations;\r\n\t@Input() selectOnRowClick = false;\r\n\t@Input() autoReload = true;\r\n\t@Input() showReloading = false;\r\n\t@Input() noDataMessage: string;\r\n\r\n\t// UI state without input:\r\n\tindexColumnVisible: boolean;\r\n\tselectColumnVisible: boolean;\r\n\texpandColumnVisible: boolean;\r\n\r\n\t// UI state: visible get/set for the outside with @Input for one-time initial values\r\n\tprivate _sortBy: string;\r\n\tprivate _sortAsc = true;\r\n\r\n\tprivate _offset = 0;\r\n\tprivate _limit = 10;\r\n\r\n\t@Input()\r\n\tget sortBy() {\r\n\t\treturn this._sortBy;\r\n\t}\r\n\r\n\tset sortBy(value) {\r\n\t\tthis._sortBy = value;\r\n\t\tthis.subject$.next();\r\n\t}\r\n\r\n\t@Input()\r\n\tget sortAsc() {\r\n\t\treturn this._sortAsc;\r\n\t}\r\n\r\n\tset sortAsc(value) {\r\n\t\tthis._sortAsc = value;\r\n\t\tthis.subject$.next();\r\n\t}\r\n\r\n\t@Input()\r\n\tget offset() {\r\n\t\treturn this._offset;\r\n\t}\r\n\r\n\tset offset(value) {\r\n\t\tthis._offset = value;\r\n\t\tthis.subject$.next();\r\n\t}\r\n\r\n\t@Input()\r\n\tget limit() {\r\n\t\treturn this._limit;\r\n\t}\r\n\r\n\tset limit(value) {\r\n\t\tthis._limit = value;\r\n\t\tthis.subject$.next();\r\n\t}\r\n\r\n\t// calculated property:\r\n\r\n\t@Input()\r\n\tget page() {\r\n\t\treturn Math.floor(this.offset / this.limit) + 1;\r\n\t}\r\n\r\n\tset page(value) {\r\n\t\tthis.offset = (value - 1) * this.limit;\r\n\t}\r\n\r\n\tget lastPage() {\r\n\t\treturn Math.ceil(this.itemCount / this.limit);\r\n\t}\r\n\r\n\t// setting multiple observable properties simultaneously\r\n\tsort(sortBy: string, asc: boolean) {\r\n\t\tthis.sortBy = sortBy;\r\n\t\tthis.sortAsc = asc;\r\n\t}\r\n\r\n\t// init\r\n\tngOnInit() {\r\n\t\tthis._initDefaultValues();\r\n\t\tthis._initDefaultClickEvents();\r\n\t\tthis._updateDisplayParams();\r\n\r\n\t\tif (this.autoReload) {\r\n\t\t\tthis.reloadItems();\r\n\t\t}\r\n\r\n\t\tthis.stream$.subscribe(() => {\r\n\t\t\tthis.reloadItems();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _initDefaultValues() {\r\n\t\tthis.indexColumnVisible = this.indexColumn;\r\n\t\tthis.selectColumnVisible = this.selectColumn;\r\n\t\tthis.expandColumnVisible = this.expandableRows;\r\n\t}\r\n\r\n\tprivate _initDefaultClickEvents() {\r\n\t\tthis.headerClick.subscribe((tableEvent: {column: DataTableColumn, event: Event}) => this.sortColumn(tableEvent.column));\r\n\t\tif (this.selectOnRowClick) {\r\n\t\t\tthis.rowClick.subscribe((tableEvent: {row: DataTableRow, event: Event}) => tableEvent.row.selected = !tableEvent.row.selected);\r\n\t\t}\r\n\t}\r\n\r\n\t// Reloading:\r\n\t_reloading = false;\r\n\r\n\tget reloading() {\r\n\t\treturn this._reloading;\r\n\t}\r\n\r\n\t@Output() reload = new EventEmitter();\r\n\r\n\treloadItems() {\r\n\t\tthis._reloading = true;\r\n\t\tthis.reload.emit(this._getRemoteParameters());\r\n\t}\r\n\r\n\tprivate _onReloadFinished() {\r\n\t\tthis._updateDisplayParams();\r\n\r\n\t\tthis._selectAllCheckbox = false;\r\n\t\tthis._reloading = false;\r\n\t}\r\n\r\n\t_displayParams = <DataTableParams>{}; // params of the last finished reload\r\n\r\n\tget displayParams() {\r\n\t\treturn this._displayParams;\r\n\t}\r\n\r\n\t_updateDisplayParams() {\r\n\t\tthis._displayParams = {\r\n\t\t\tsortBy: this.sortBy,\r\n\t\t\tsortAsc: this.sortAsc,\r\n\t\t\toffset: this.offset,\r\n\t\t\tlimit: this.limit\r\n\t\t};\r\n\t}\r\n\r\n\tsubject$ = new Subject<void>();\r\n\tstream$: Observable<void>;\r\n\tconstructor() {\r\n\t\tthis.stream$ = this.subject$.debounceTime(100);\r\n\t}\r\n\r\n\t// event handlers:\r\n\t@Output() rowClick = new EventEmitter();\r\n\t@Output() rowDoubleClick = new EventEmitter();\r\n\t@Output() headerClick = new EventEmitter();\r\n\t@Output() cellClick = new EventEmitter();\r\n\r\n\tpublic rowClicked(row: DataTableRow, event: Event) {\r\n\t\tthis.rowClick.emit({ row, event });\r\n\t}\r\n\r\n\tpublic rowDoubleClicked(row: DataTableRow, event: Event) {\r\n\t\tthis.rowDoubleClick.emit({ row, event });\r\n\t}\r\n\r\n\tpublic headerClicked(column: DataTableColumn, event: Event) {\r\n\t\tif (!this._resizeInProgress) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tthis.headerClick.emit({ column, event });\r\n\t\t} else {\r\n\t\t\tthis._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\r\n\t\t}\r\n\t}\r\n\r\n\tprivate cellClicked(column: DataTableColumn, row: DataTableRow, event: MouseEvent) {\r\n\t\tthis.cellClick.emit({ row, column, event });\r\n\t}\r\n\r\n\t// functions:\r\n\r\n\tprivate _getRemoteParameters(): DataTableParams {\r\n\t\tlet params = <DataTableParams>{};\r\n\r\n\t\tif (this.sortBy) {\r\n\t\t\tparams.sortBy = this.sortBy;\r\n\t\t\tparams.sortAsc = this.sortAsc;\r\n\t\t}\r\n\t\tif (this.pagination) {\r\n\t\t\tparams.offset = this.offset;\r\n\t\t\tparams.limit = this.limit;\r\n\t\t}\r\n\t\treturn params;\r\n\t}\r\n\r\n\tprivate sortColumn(column: DataTableColumn) {\r\n\t\tif (column.sortable) {\r\n\t\t\tlet ascending = this.sortBy === column.property ? !this.sortAsc : true;\r\n\t\t\tthis.sort(column.property, ascending);\r\n\t\t}\r\n\t}\r\n\r\n\tget columnCount() {\r\n\t\tlet count = 0;\r\n\t\tcount += this.indexColumnVisible ? 1 : 0;\r\n\t\tcount += this.selectColumnVisible ? 1 : 0;\r\n\t\tcount += this.expandColumnVisible ? 1 : 0;\r\n\t\tthis.columns.toArray().forEach(column => {\r\n\t\t\tcount += column.visible ? 1 : 0;\r\n\t\t});\r\n\t\treturn count;\r\n\t}\r\n\r\n\tpublic getRowColor(item: any, index: number, row: DataTableRow) {\r\n\t\tif (this.rowColors !== undefined) {\r\n\t\t\treturn (<RowCallback>this.rowColors)(item, row, index);\r\n\t\t}\r\n\t}\r\n\r\n\t// selection:\r\n\r\n\tselectedRow: DataTableRow;\r\n\tselectedRows: DataTableRow[] = [];\r\n\r\n\tprivate _selectAllCheckbox = false;\r\n\r\n\tget selectAllCheckbox() {\r\n\t\treturn this._selectAllCheckbox;\r\n\t}\r\n\r\n\tset selectAllCheckbox(value) {\r\n\t\tthis._selectAllCheckbox = value;\r\n\t\tthis._onSelectAllChanged(value);\r\n\t}\r\n\r\n\tprivate _onSelectAllChanged(value: boolean) {\r\n\t\tthis.rows.toArray().forEach(row => row.selected = value);\r\n\t}\r\n\r\n\tonRowSelectChanged(row: DataTableRow) {\r\n\r\n\t\t// maintain the selectedRow(s) view\r\n\t\tif (this.multiSelect) {\r\n\t\t\tlet index = this.selectedRows.indexOf(row);\r\n\t\t\tif (row.selected && index < 0) {\r\n\t\t\t\tthis.selectedRows.push(row);\r\n\t\t\t} else if (!row.selected && index >= 0) {\r\n\t\t\t\tthis.selectedRows.splice(index, 1);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (row.selected) {\r\n\t\t\t\tthis.selectedRow = row;\r\n\t\t\t} else if (this.selectedRow === row) {\r\n\t\t\t\tdelete this.selectedRow;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// unselect all other rows:\r\n\t\tif (row.selected && !this.multiSelect) {\r\n\t\t\tthis.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\r\n\t\t\t\tif (row_ !== row) { // avoid endless loop\r\n\t\t\t\t\trow_.selected = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// other:\r\n\r\n\tget substituteItems() {\r\n\t\treturn Array.from({ length: this.displayParams.limit! - this.items.length });\r\n\t}\r\n\r\n\t// column resizing:\r\n\r\n\tprivate _resizeInProgress = false;\r\n\r\n\tprivate resizeColumnStart(event: MouseEvent, column: DataTableColumn, columnElement: HTMLElement) {\r\n\t\tthis._resizeInProgress = true;\r\n\r\n\t\tdrag(event, {\r\n\t\t\tmove: (moveEvent: MouseEvent, dx: number) => {\r\n\t\t\t\tif (this._isResizeInLimit(columnElement, dx)) {\r\n\t\t\t\t\tcolumn.width = columnElement.offsetWidth + dx;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tresizeLimit = 30;\r\n\r\n\tprivate _isResizeInLimit(columnElement: HTMLElement, dx: number) {\r\n\t\t/* This is needed because CSS min-width didn't work on table-layout: fixed.\r\n\t\t Without the limits, resizing can make the next column disappear completely,\r\n\t\t and even increase the table width. The current implementation suffers from the fact,\r\n\t\t that offsetWidth sometimes contains out-of-date values. */\r\n\t\tif ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\r\n\t\t\t!columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\r\n\t\t\t(dx >= 0 && ((<HTMLElement> columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n","export const PAGINATION_TEMPLATE = `\r\n<div class=\"pagination-box\">\r\n    <div class=\"pagination-range\">\r\n        {{dataTable.translations.paginationRange}}:\r\n        <span [textContent]=\"dataTable.offset + 1\"></span>\r\n        -\r\n        <span [textContent]=\"[dataTable.offset + dataTable.limit , dataTable.itemCount] | min\"></span>\r\n        /\r\n        <span [textContent]=\"dataTable.itemCount\"></span>\r\n    </div>\r\n    <div class=\"pagination-controllers\">\r\n        <div class=\"pagination-limit\">\r\n            <div class=\"input-group\">\r\n            \t<div class=\"input-group-prepend\">\r\n                \t<span class=\"input-group-text\">{{dataTable.translations.paginationLimit}}:</span>\r\n\t\t\t\t</div>\r\n                <select class=\"form-control\" [(ngModel)]=\"limit\">\r\n\t\t\t\t\t<option *ngFor=\"let l of limits\" [value]=\"l\">{{l}}</option>\r\n\t\t        </select>\r\n            </div>\r\n        </div>\r\n        <div class=\" pagination-pages\">\r\n            <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageFirst()\" class=\"btn btn-default pagination-firstpage\">\r\n                <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n\t\t\t</button>\r\n            <button [disabled]=\"dataTable.offset <= 0\" (click)=\"pageBack()\" class=\"btn btn-default pagination-prevpage\">\r\n            \t<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n\t\t\t</button>\r\n            <div class=\"pagination-page\">\r\n                <div class=\"input-group\">\r\n                    <input #pageInput type=\"number\" class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\r\n                           [ngModel]=\"page\" (blur)=\"page = pageInput.value\"\r\n                           (keyup.enter)=\"page = pageInput.value\" (keyup.esc)=\"pageInput.value = page\"/>\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text\">/{{dataTable.lastPage}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageForward()\" class=\"btn btn-default pagination-nextpage\">\r\n            \t<i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n\t\t\t</button>\r\n            <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\" (click)=\"pageLast()\" class=\"btn btn-default pagination-lastpage\">\r\n                <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n\t\t\t</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n","export const PAGINATION_STYLE = `\r\n.pagination-box {\r\n    position: relative;\r\n    margin-top: -10px;\r\n}\r\n.pagination-range {\r\n    margin-top: 7px;\r\n    margin-left: 3px;\r\n    display: inline-block;\r\n}\r\n.pagination-controllers {\r\n    float: right;\r\n}\r\n.pagination-controllers select {\r\n    min-width: 60px;\r\n    /*padding: 1px 0px 0px 5px;*/\r\n    text-align: right;\r\n}\r\n\r\n.pagination-limit {\r\n    margin-right: 25px;\r\n    display: inline-table;\r\n}\r\n.pagination-pages {\r\n    display: inline-block;\r\n}\r\n.pagination-page {\r\n    width: 125px;\r\n    display: inline-table;\r\n}\r\n.pagination-box button {\r\n    outline: none !important;\r\n}\r\n.pagination-prevpage,\r\n.pagination-nextpage,\r\n.pagination-firstpage,\r\n.pagination-lastpage {\r\n    vertical-align: top;\r\n    cursor: pointer;\r\n}\r\n.pagination-reload {\r\n    color: gray;\r\n    font-size: 12px;\r\n}\r\n`;\r\n","import {Component, Inject, forwardRef, Input} from '@angular/core';\r\nimport {DataTable} from './table.component';\r\nimport {PAGINATION_TEMPLATE} from './pagination.template';\r\nimport {PAGINATION_STYLE} from \"./pagination.style\";\r\n\r\n\r\n@Component({\r\n\tmoduleId: module.id,\r\n\tselector: 'data-table-pagination',\r\n\ttemplate: PAGINATION_TEMPLATE,\r\n\tstyles: [PAGINATION_STYLE]\r\n})\r\nexport class DataTablePagination {\r\n\r\n\tlimits: number[] = [10, 25, 50, 100, 250];\r\n\r\n\tconstructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable) {\r\n\t}\r\n\r\n\tpageBack() {\r\n\t\tthis.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\r\n\t}\r\n\r\n\tpageForward() {\r\n\t\tthis.dataTable.offset += this.dataTable.limit;\r\n\t}\r\n\r\n\tpageFirst() {\r\n\t\tthis.dataTable.offset = 0;\r\n\t}\r\n\r\n\tpageLast() {\r\n\t\tthis.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\r\n\t}\r\n\r\n\tget maxPage() {\r\n\t\treturn Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\r\n\t}\r\n\r\n\tget limit() {\r\n\t\treturn this.dataTable.limit;\r\n\t}\r\n\r\n\tset limit(value) {\r\n\t\tthis.dataTable.limit = Number(<any>value); // TODO better way to handle that value of number <input> is string?\r\n\t}\r\n\r\n\tget page() {\r\n\t\treturn this.dataTable.page;\r\n\t}\r\n\r\n\tset page(value) {\r\n\t\tthis.dataTable.page = Number(<any>value);\r\n\t}\r\n}\r\n","export const HEADER_TEMPLATE = `\r\n<div class=\"data-table-header\">\r\n    <h4 class=\"title\" [textContent]=\"dataTable.headerTitle\"></h4>\r\n    <div class=\"button-panel\">\r\n        <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\r\n            (click)=\"dataTable.reloadItems()\" \r\n            [attr.aria-label]=\"dataTable.translations.headerReload\" [title]=\"dataTable.translations.headerReload\">\r\n            <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\r\n            (click)=\"columnSelectorOpen = !columnSelectorOpen; $event.stopPropagation()\" \r\n            [attr.aria-label]=\"dataTable.translations.headerColumnSelector\" [title]=\"dataTable.translations.headerColumnSelector\">\r\n            <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <div class=\"column-selector-wrapper\" (click)=\"$event.stopPropagation()\">\r\n            <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\r\n                <div *ngIf=\"dataTable.expandableRows\" class=\"column-selector-fixed-column checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\"/>\r\n                        <span>{{dataTable.translations.expandColumn}}</span>\r\n                    </label>\r\n                </div>\r\n                <div *ngIf=\"dataTable.indexColumn\" class=\"column-selector-fixed-column checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\"/>\r\n                        <span>{{dataTable.translations.indexColumn}}</span>\r\n                    </label>\r\n                </div>\r\n                <div *ngIf=\"dataTable.selectColumn\" class=\"column-selector-fixed-column checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\"/>\r\n                        <span>{{dataTable.translations.selectColumn}}</span>\r\n                    </label>\r\n                </div>\r\n                <div *ngFor=\"let column of dataTable.columns\" class=\"column-selector-column checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" [(ngModel)]=\"column.visible\"/>\r\n                        <span [textContent]=\"column.header\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n","export const HEADER_STYLE = `\r\n.data-table-header {\r\n    min-height: 25px;\r\n    margin-bottom: 10px;\r\n}\r\n.title {\r\n    display: inline-block;\r\n    margin: 5px 0 0 5px;\r\n}\r\n.button-panel {\r\n    float: right;\r\n}\r\n.button-panel button {\r\n    outline: none !important;\r\n}\r\n\r\n.column-selector-wrapper {\r\n    position: relative;\r\n}\r\n.column-selector-box {\r\n    box-shadow: 0 0 10px lightgray;\r\n    background: white;\r\n    width: 150px;\r\n    padding: 10px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 1px;\r\n    z-index: 1060;\r\n}\r\n.column-selector-box .checkbox {\r\n    margin-bottom: 4px;\r\n}\r\n.column-selector-fixed-column {\r\n    font-style: italic;\r\n}\r\n`;","import { Component, Inject, forwardRef } from '@angular/core';\r\nimport { DataTable } from './table.component';\r\nimport { HEADER_TEMPLATE } from './header.template';\r\nimport { HEADER_STYLE } from './header.style';\r\n\r\n@Component({\r\n  selector: 'data-table-header',\r\n  template: HEADER_TEMPLATE,\r\n  styles: [HEADER_STYLE],\r\n  host: {\r\n    '(document:click)': '_closeSelector()'\r\n  }\r\n})\r\nexport class DataTableHeader {\r\n\r\n    columnSelectorOpen = false;\r\n\r\n    _closeSelector() {\r\n        this.columnSelectorOpen = false;\r\n    }\r\n\r\n    constructor(@Inject(forwardRef(() => DataTable)) public dataTable: DataTable) {}\r\n}\r\n","import { DataTableParams } from '../types/data-table-params.type';\r\n\r\n\r\nexport class DataTableResource<T> {\r\n\r\n    constructor(private items: T[]) {}\r\n\r\n    query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\r\n\r\n        let result: T[] = [];\r\n        if (filter) {\r\n            result = this.items.filter(filter);\r\n        } else {\r\n            result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\r\n        }\r\n\r\n        if (params.sortBy) {\r\n            result.sort((a:DataTableParams, b: DataTableParams) => {\r\n                if (typeof a[params.sortBy!] === 'string') {\r\n                    return a[params.sortBy!].localeCompare(b[params.sortBy!]);\r\n                } else {\r\n                    return a[params.sortBy!] - b[params.sortBy!];\r\n                }\r\n            });\r\n            if (params.sortAsc === false) {\r\n                result.reverse();\r\n            }\r\n        }\r\n        if (params.offset !== undefined) {\r\n            if (params.limit === undefined) {\r\n                result = result.slice(params.offset, result.length);\r\n            } else {\r\n                result = result.slice(params.offset, params.offset + params.limit);\r\n            }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(result));\r\n        });\r\n    }\r\n\r\n    count(): Promise<number> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.items.length));\r\n        });\r\n\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer } from '@angular/core';\r\n\r\n\r\nfunction isBlank(obj: any): boolean {\r\n  return obj === undefined || obj === null;\r\n}\r\n\r\n@Directive({ selector: '[hide]', inputs: ['hide'] })\r\nexport class Hide {\r\n\r\n  private _prevCondition: boolean = false;\r\n  private _displayStyle: string;\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer) { }\r\n\r\n  set hide(newCondition: boolean) {\r\n    this.initDisplayStyle();\r\n\r\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\r\n      this._prevCondition = true;\r\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');\r\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\r\n      this._prevCondition = false;\r\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\r\n    }\r\n  }\r\n\r\n  private initDisplayStyle() {\r\n    if (this._displayStyle === undefined) {\r\n      let displayStyle = this._elementRef.nativeElement.style.display;\r\n      if (displayStyle && displayStyle !== 'none') {\r\n        this._displayStyle = displayStyle;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n  name: 'min'\r\n})\r\nexport class MinPipe implements PipeTransform {\r\n  transform(value: number[], args: string[]): any {\r\n    return Math.min.apply(null, value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n  name: 'px'\r\n})\r\nexport class PixelConverter implements PipeTransform {\r\n  transform(value: string | number, args: string[]): any {\r\n    if (value === undefined) {\r\n        return;\r\n    }\r\n    if (typeof value === 'string') {\r\n        return value;\r\n    }\r\n    if (typeof value === 'number') {\r\n        return value + 'px';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DataTable } from '../components/table.component';\r\nimport { DataTableRow } from '../components/row.component';\r\nimport { DataTableColumn } from '../components/column.component';\r\nimport { DataTableHeader } from '../components/header.component';\r\nimport { DataTablePagination } from '../components/pagination.component';\r\n\r\nimport { Hide } from '../utils/hide';\r\nimport { MinPipe } from '../utils/min';\r\nimport { PixelConverter } from '../utils/px';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tDataTable, DataTableColumn,\r\n\t\tDataTableRow, DataTablePagination, DataTableHeader,\r\n\t\tPixelConverter, Hide, MinPipe\r\n\t],\r\n\timports: [CommonModule, FormsModule],\r\n\texports: [\r\n\t\tDataTable, DataTableColumn\r\n\t]\r\n})\r\nexport class DataTableModule {\r\n}","// Public classes.\r\nimport { DataTable } from \"./components/table.component\";\r\nimport { DataTableColumn } from './components/column.component';\r\nimport { DataTableRow } from \"./components/row.component\";\r\nimport { DataTablePagination } from \"./components/pagination.component\";\r\nimport { DataTableHeader } from \"./components/header.component\";\r\nimport { DataTableTranslations } from \"./types/data-table-translations.type\";\r\nimport { CellCallback } from \"./types/cell-callback.type\";\r\nimport { RowCallback } from \"./types/row-callback.type\";\r\nimport { defaultTranslations } from \"./types/default-translations.type\";\r\nimport { DataTableResource } from './tools/data-table-resource';\r\nimport { DataTableParams } from './types/data-table-params.type';\r\n\r\nexport { DataTableModule } from './modules/data-table.module'\r\nexport * from './tools/data-table-resource';\r\nexport {\r\n\tDataTable, DataTableColumn, DataTableRow, DataTablePagination, DataTableResource, DataTableParams,\r\n\tDataTableHeader, DataTableTranslations, CellCallback, RowCallback, defaultTranslations\r\n};\r\nexport const DATA_TABLE_DIRECTIVES = [DataTable, DataTableColumn];\r\n\r\n"],"names":["Subject"],"mappings":"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"}